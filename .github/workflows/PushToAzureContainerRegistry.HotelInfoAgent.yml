name: Build, Push and Deploy Hotel Information Agent to Azure

on:
  push:
    paths:
      - hotel-information-agent/**
      - .github/workflows/PushToAzureContainerRegistry.HotelInfoAgent.yml
    branches:
      - main
      - dev

env:
  AZURE_WEBAPP_NAME: DverseHotelInformationAgentApp
  IMAGE_NAME: dversehotelinformationagentcontainer.azurecr.io/app
  IMAGE_TAG: ${{ github.sha }}
  WORKING_DIRECTORY: hotel-information-agent

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt

      - name: Run Tests and Check Coverage
        run: pytest .\test_hotel_information_route.py --cov=app --cov-report=term --cov-fail-under=90

  performance_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt

      - name: Run Performance Tests
        run: pytest .\test_hotel_information_benchmark.py -v -s --benchmark-sort=mean


  build_and_push:
    if: github.ref == 'refs/heads/main'
    needs: test, performance_test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.IMAGE_NAME }}
          username: ${{ secrets.RENO_REGISTRY_USERNAME }}
          password: ${{ secrets.RENO_REGISTRY_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.HOTEL_INFO_AZURE_PUBLISH_PROFILE }}
          images: '${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'